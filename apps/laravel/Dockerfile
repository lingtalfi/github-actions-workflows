# Use PHP 8.2 as the base image
FROM php:8.2-fpm

# Install essential packages
RUN apt-get update \
    && apt-get install -y \
       tree curl ca-certificates zip unzip libpng-dev libpq-dev libzip-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev libicu-dev \
       nginx net-tools vim netcat-openbsd nodejs npm \
    && apt-get -y autoremove \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install \
       gd pdo_pgsql pdo_mysql bcmath zip intl






# Install Composer
RUN curl -sLS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer

# Set a non-root user (adjust as needed)
USER www-data

# Copy your code into the image
COPY . /var/www/html

# Set work directory
WORKDIR /var/www/html


# Switch to the root user to change ownership
USER root


# Set permissions for Laravel directories
RUN chown -R www-data:www-data /var/www/html/storage \
    && chown -R www-data:www-data /var/www/html/bootstrap/cache \
    && chmod -R 775 /var/www/html/storage \
    && chmod -R 775 /var/www/html/bootstrap/cache

# Switch back to the www-data user
USER www-data

# Copy the env file generated by github actions to laravel
ARG ENV_CONTENT_BASE64
RUN echo "$ENV_CONTENT_BASE64" | base64 -d > /var/www/html/.env



# Install Composer dependencies
RUN composer install --no-dev --optimize-autoloader


# RUN php artisan key:generate --ansi


USER root
RUN php artisan storage:link
RUN chown -R www-data:www-data /var/www
USER www-data



RUN npm install

# Build Vite assets
RUN npm run build




USER root
# Copy nginx configuration file
COPY ./nginx.docker.conf /etc/nginx/sites-available/default

# add ll alias
RUN echo "alias ll='ls -lArth'" >> /root/.bashrc



EXPOSE 80

# Start Nginx and PHP-FPM
CMD service nginx start && php-fpm
